anova(res1)
sqrt(.07711)
sqrt(.07711)/sqrt(14)
sqrt(.07711)/sqrt(54)
sqrt(.07711)/sqrt(56)
sqrt(.01442)
sqrt(.01442)/sqrt(14)
wCorIncHiLo<-scan()
hi<-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
cor<-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
sub
subs
hi<-as.factor(hi)
cor<-as.factor(cor)
lm(w~hi+cor+sub)
lm(wCorIncHiLo~hi+cor+sub)
size(wCorIncHiLo)
length(wCorIncHiLo)
lm(wCorIncHiLo~hi+cor+subs)
anova(lm(wCorIncHiLo~hi+cor+subs))
sqrt(.00575)
sqrt(.00575)/sqrt(14)
summary(lm(wCorIncHiLo~hi+cor+subs))
anova(lm(wCorIncHiLo~hi*cor+subs ))
sqrt(.17229)/sqrt(14)
hi
cor
wCorHiLo = scan()
anova(lm(wCorIncHiLo~hi*cor+subs ))
anova(lm(wCorHiLo~hi*cor+subs ))
wpGuessFace<-scan()
anova(lm(wpGuessFace ~ subs ))
ls()
anova(lm(wpGuessFace ~ quartiles + subs ))
quartiles
ls()
acts<-scan()
subsLong<-()
subsLong<-scan()
confLong<-scan()
cohLong<-scan()
subsLong<-as.factor(subsLong)
subsLong
lm(acts~subsLong+cohLong +confLong)
summary(lm(acts~subsLong+cohLong +confLong))
anova(lm(acts~subsLong+cohLong +confLong))
install.packages("lme4")
load("lme4")
library("lme4")
help(lmer)
res1<-lmer(acts ~ cohLong + confLong + 1|subsLong ))
res1<-lmer(acts ~ cohLong + confLong + 1|subsLong )
summary(res1)
library(languageR)
pvals.fnc(res1)
res1<-lmer(acts ~ cohLong + confLong + (1|subsLong) )
res1
pvals.fnc(res1)
ls()
classPerf<-scan()
quartiles
lm(classPerf~quartiles + subs)
summary(lm(classPerf~quartiles + subs))
anova(lm(classPerf~quartiles + subs))
dat = scan()
dat
sub<-scan()
conf<-scan()
sub<-as.factor(sub)
res = lm(dat~sub + conf)
res
summary(res)
anova(res)
summary(res)
conf<-as.factor(conf)
conf
conf.contr
conf.C
contrasts(conf)
contrasts(conf,1)<-contr.poly(3)
contrasts(conf,1)<-contr.poly(4)
contrasts(conf)
res = lm(dat~sub + conf)
summary(res)
anova(res)
dat<-scan()
res = lm(dat~sub + conf)
anova(res)
dat
summary(res)
dat<-scan()
res = lm(dat~sub + conf)
anova(res)
dat<-scan()
dat
res = lm(dat~sub + conf)
size(sub)
sub
conf
dat<-scan()
res = lm(dat~sub + conf)
res
summary(res)
anova(res)
dat<-scan()
sub
conf
sub14 = scan()
conf14 <-scan()
res = lm(dat~sub14 + conf14)
res
summary(res)
dat <-scan()
res = lm(dat~sub14 + conf14)
summary(res)
dat = scan()
res = lm(dat~sub + conf)
res
summary(res)
dat = scan()
res = lm(dat~sub + conf)
res
summary(res)
acts <-scan()
acts
subs = <-scan()
subs <-scan()
subs
corInc<-scan()
corInc
ls
ls()
class<-scan()
ls()
lm(acts~class + corInc + subs)
anova(lm(acts~class + corInc + subs))
subs
subs<-as.factor(subs)
res1<-lm(acts~class + corInc + subs)
res1
anova(res1)
res2<-lm(acts~class * corInc + subs)
anova(res2)
s
ls ()
a<-scan(      0.81472#
0.90579#
0.12699#
0.91338#
0.63236#
0.09754#
0.2785#
0.54688#
0.95751#
0.96489#
0.15761#
0.97059#
0.95717#
0.48538#
0.80028#
0.14189#
0.42176#
0.91574#
0.79221#
0.95949#
)
a<-scan()
b<-scan()
c<-scan()
lm(c~a+b)
res2<-lm(c~a+b)
summary(res2)
c<-scan()
res2<-lm(c~a+b)
summary(res2)
res2<-lm(c~a*b)
summary(res2)
res2<-lm(c~a*b)
summary(res2)
abInt<-scan()
res2<-lm(c~a + b + abInt)
summary(res2)
a = a*2 + 3
b = -2*b + 100
b
a
b = -2*b - 100
b
abInt<-a*b
abInt
res2<-lm(c~a + b + abInt)
summary(res2)
rep(1:13, 41)
rep(1:41, 13)
rep(1:13, each=41)
rep(1:41, 13)
rep(1:13, each=41)
install.packages("MART")
install.packages("R-MART")
setwd(/Users/alangordon/mounts/w5/alan/perceptMnemonic/fmri_data/ROutput/)
setwd("/Users/alangordon/mounts/w5/alan/perceptMnemonic/fmri_data/ROutput/")
d = read.csv("MnemonicData.csv")
d
head(d)
lm(corResp~actsTrueClass)
lm(corResp~actsTrueClass, data=d)
lmer(corResp~actsTrueClass + (1|subs), data=d)
library(lme4)
lmer(corResp~actsTrueClass + (1|subs), data=d)
lmer(corResp~actsTrueClass + class + (1|subs), data=d)
head(d)
glmer(corResp~actsTrueClass + class + (1|subs), data=d, family = "binomial")
glmer(corResp~actsTrueClass + class + (1|subs)+ (actsTrueClass + 0|subs), data=d, family = "binomial")
glmer(corResp~actsTrueClass + class + unsignedConf + (1|subs)+ (actsTrueClass + 0|subs), data=d, family = "binomial")
glmer(corResp~actsTrueClass*class + unsignedConf + (1|subs)+ (actsTrueClass:class + 0|subs), data=d, family = "binomial")
glmer(corResp~actsTrueClass + unsignedConf + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$class==1,], family = "binomial")
glmer(corResp~actsTrueClass + unsignedConf + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$class==0,], family = "binomial")
lmer(corResp~actsTrueClass + unsignedConf + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$class==0,])
lmer(RT~actsTrueClass + unsignedConf + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$class==0,])
lmer(RT~actsTrueClass + unsignedConf + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$class==1,])
lmer(unsignedConf~actsTrueClass + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$class==1,])
lmer(unsignedConf~actsTrueClass + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$class==0,])
lmer(unsignedConf~actsTrueClass + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d)
lmer(unsignedConf~actsTrueClass + class + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d)
lmer(unsignedConf~actsTrueClass*class + corResp + (1|subs)+ (actsTrueClass:class + 0|subs), data=d)
lmer(unsignedConf~actsTrueClass + class + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d)
lmer(binaryConf~actsTrueClass + class + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d)
d$binaryConf
glmer(binaryConf~actsTrueClass + class + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d, family="binomial")
d$unsignedConf[d$binaryConf==1]
d$unsignedConf[d$binaryConf==0]
d$binaryConf[d$unsignedConf==1]
d$binaryConf[d$unsignedConf==2]
d$binaryConf[d$unsignedConf==3]
d$binaryConf[d$unsignedConf==4]
lmer(unsignedConf~actsTrueClass + class + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d)
lmer(RT~actsTrueClass + class + corResp + (1|subs)+ (actsTrueClass + 0|subs), data=d)
lmer(RT~actsTrueClass + class + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$corResp==1,])
lmer(RT~actsTrueClass + class + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$corResp==0,])
lmer(RT~actsTrueClass + class + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$corResp==1,])
lmer(RT~actsTrueClass*class + (1|subs)+ (actsTrueClass:class + 0|subs), data=d[d$corResp==1,])
lmer(RT~actsTrueClass + class + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$corResp==1,])
lmer(RT~actsTrueClass + class + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$corResp==1,], REML=FALSE)
LRT
lmer(RT~actsTrueClass + class + (1|subs)+ (actsTrueClass + 0|subs), data=d[d$corResp==1,], REML=FALSE)
lmer(corResp ~actsTrueClass + class + (1|subs)+ (actsTrueClass + 0|subs), data=d, REML=FALSE)
lmer(corResp ~ actsTrueClass + confUnsigned + class + (1|subs)+ (actsTrueClass + 0|subs), data=d, REML=FALSE)
lmer(corResp ~ actsTrueClass + unsignedConf + class + (1|subs)+ (actsTrueClass + 0|subs), data=d, REML=FALSE)
glmer(corResp ~ actsTrueClass + unsignedConf + class + (1|subs)+ (actsTrueClass + 0|subs), data=d, family = "binomial")
glmer(corResp ~ actsTrueClass:class  + class + (1|subs)+ (actsTrueClass + 0|subs), data=d, family = "binomial")
d = read.csv("MnemonicData.csv")
head(d)
glmer(corResp ~ actsDiff + unsignedConf + class + (1|subs)+ (actsDiff + 0|subs), data=d, family = "binomial")
glmer(corResp ~ actsDiff + unsignedConf + class + (1|subs)+ (actsDiff + 0|subs), data=d[d$class==1,], family = "binomial")
glmer(corResp ~ actsDiff + unsignedConf  + (1|subs)+ (actsDiff + 0|subs), data=d[d$class==1,], family = "binomial")
glmer(corResp ~ actsDiff + unsignedConf  + (1|subs)+ (actsDiff + 0|subs), data=d[d$class==0,], family = "binomial")
glmer(corResp ~ actsDiff + binaryConf  + (1|subs)+ (actsDiff + 0|subs), data=d[d$class==0,], family = "binomial")
d = read.csv("MnemonicData.csv")
head(d)
glmer(corResp ~ acts1 + binaryConf  + (1|subs)+ (acts1 + 0|subs), data=d[d$class==0,], family = "binomial")
glmer(corResp ~ acts1 + binaryConf  + (1|subs)+ (acts1 + 0|subs), data=d[d$class==1,], family = "binomial")
glmer(corResp ~ acts2 + binaryConf  + (1|subs)+ (acts1 + 0|subs), data=d[d$class==1,], family = "binomial")
glmer(corResp ~ acts2 + binaryConf  + (1|subs)+ (acts1 + 0|subs), data=d[d$class==0,], family = "binomial")
d = read.csv("MnemonicData.csv")
glmer(corResp ~ acts2 + binaryConf  + (1|subs)+ (acts1 + 0|subs), data=d[d$class==0,], family = "binomial")
glmer(corResp ~ acts2 + binaryConf  + (1|subs)+ (acts1 + 0|subs), data=d[d$class==1,], family = "binomial")
glmer(corResp ~ acts1 + binaryConf  + (1|subs)+ (acts1 + 0|subs), data=d[d$class==1,], family = "binomial")
glmer(corResp ~ acts1 + binaryConf  + (1|subs)+ (acts1 + 0|subs), data=d[d$class==0,], family = "binomial")
list("3")
a<-list("3")
a[[1]]
a[1]
c('c1','c2')
setwd("~/Documents/R")
setwd("~/Documents/R/MultiLevelPathAnalysis/")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
a = "subs"
a[1]
length(a)
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
RFX
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
pathRes
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
pathRes
source("MultiLevelPathAnalysis2.R")
pathRes
attributes(pathRes)
pathRes$bootDirect
attributes(pathRes$bootDirect)
source("MultiLevelPathAnalysis2.R")
pathRes
pathRes$IP
pathRes$IP
pathRes$IP[[1]]
pathRes$IP[[1]]
source("MultiLevelPathAnalysis2.R")
pathRes
pathRes$modelList
pathRes$modelList[[1]]
pathRes$modelList[[2]]
summary(pathRes$modelList[[2]])
pth$DF[sample( 1:nrow(pth$DF), replace=TRUE),]
pathRes$DF[sample( 1:nrow(pathRes$DF), replace=TRUE),]
pathRes$DF[sample( 1:nrow(pathRes$DF), replace=TRUE),]
pathRes$DF[sample( 1:nrow(pathRes$DF), replace=TRUE),]
pathRes
pathRes$IP
pth = pathRes
boot_DF     <- pth$DF[sample( 1:nrow(pth$DF), replace=TRUE),]
boot_pth = pth
boot_pth$DF = boot_DF
boot_pth = directPathCoeffs(boot_pth)
boot_pth$coefMatrix
boot_DF     <- pth$DF[sample( 1:nrow(pth$DF), replace=TRUE),]
boot_pth = pth
boot_pth$DF = boot_DF
boot_pth = directPathCoeffs(boot_pth)
boot_pth$coefMatrix
pathRes$IP
ind_paths
for(i in 1:pth$nBootReps){
boot_DF     <- pth$DF[sample( 1:nrow(pth$DF), replace=TRUE),]
boot_pth = pth
boot_pth$DF = boot_DF
boot_pth = directPathCoeffs(boot_pth)
boot_pth = indirectPathCoefs(boot_pth)
theseIndCoefs = sapply(pth$IP, function(x) getElement(x,"coef"))
ind_paths 	<- as.data.frame(rbind(ind_paths, theseIndCoefs))
dir_paths[,,i]<-boot_pth$coefMatrix
}
ind_paths
ind_paths = NULL
for(i in 1:pth$nBootReps){
boot_DF     <- pth$DF[sample( 1:nrow(pth$DF), replace=TRUE),]
boot_pth = pth
boot_pth$DF = boot_DF
boot_pth = directPathCoeffs(boot_pth)
boot_pth = indirectPathCoefs(boot_pth)
theseIndCoefs = sapply(pth$IP, function(x) getElement(x,"coef"))
ind_paths 	<- as.data.frame(rbind(ind_paths, theseIndCoefs))
dir_paths[,,i]<-boot_pth$coefMatrix
}
dir_paths = array(0, c(dim(pth$coefMatrix), pth$nBootReps))
ind_paths = NULL
for(i in 1:pth$nBootReps){
boot_DF     <- pth$DF[sample( 1:nrow(pth$DF), replace=TRUE),]
boot_pth = pth
boot_pth$DF = boot_DF
boot_pth = directPathCoeffs(boot_pth)
boot_pth = indirectPathCoefs(boot_pth)
theseIndCoefs = sapply(pth$IP, function(x) getElement(x,"coef"))
ind_paths 	<- as.data.frame(rbind(ind_paths, theseIndCoefs))
dir_paths[,,i]<-boot_pth$coefMatrix
}
ind_paths
for(i in 1:pth$nBootReps){
boot_DF     <- pth$DF[sample( 1:nrow(pth$DF), replace=TRUE),]
boot_pth = pth
boot_pth$DF = boot_DF
boot_pth = directPathCoeffs(boot_pth)
boot_pth = indirectPathCoefs(boot_pth)
theseIndCoefs = sapply(boot_pth$IP, function(x) getElement(x,"coef"))
ind_paths 	<- as.data.frame(rbind(ind_paths, theseIndCoefs))
dir_paths[,,i]<-boot_pth$coefMatrix
}
ind_paths
source("MultiLevelPathAnalysis2.R")
pathRes
pathRes$IP
pathRes$modelList
RFX
covs
pth$intercepts
pth$slopes
source("MultiLevelPathAnalysis2.R")
pathRes
pathRes$modelList
pathRes$modelList[[1]]
pathRes$modelList[[2]]
pathRes$modelList[[3]]
help(@)
help('@')
help('slot')
?Classes
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
pathRes
pathRes$bootDirect
pathRes$bootDirect$CI95Pct
pathRes$bootDirect[[1]]
pathRes$bootDirect
pathRes$bootDirect$p
pathRes$bootDirect$CI95Pct
pathRes$bootDirect$CI95Pct[3,3]
pathRes$bootDirect$CI95Pct[3,4]
pathRes$bootDirect$CI95Pct[4,3]
source("MultiLevelPathAnalysis2.R")
warnings()
source("MultiLevelPathAnalysis2.R")
pathRes
source("MultiLevelPathAnalysis2.R")
array(NULL, dim(pathRes$coefMatrix))
array(dim(pathRes$coefMatrix))
a = array(dim(pathRes$coefMatrix))
a
help(array)
source("MultiLevelPathAnalysis2.R")
pathRes
pathRes$IP
length(pathRes$IP)
pathRes$IP[[1]]
pathRes$IP[[1]]$path
pathRes$IP[[1]]$coef
pathRes$IP$coef
pathRes$IP[[:]]$coef
pathRes$IP[[:]]
pathRes$IP[[1:3]]
pathRes$IP
pathRes$IP[1]
pathRes$IP[1:3]
pathRes$IP[1:3]$coef
pathRes$IP[1]$coef
pathRes$IP[[1]]
pathRes$IP[[1]]$coef
help(unlist)
unlist(pathRes$IP)
unlist(pathRes$IP$coef)
a<-unlist(pathRes$IP)
a
a[[1]]
a[[1,1]]
a[[1]]
a[[2]]
a[[15]]
pathRes$IP
pathRes$IP[[1]]
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
pathRes
intersect(c(1,1,2,3), c(3,4,2,3,18))
union(c(1,1,2,3), c(3,4,2,3,18))
union(c(1,1,2,3), c(3,4,2,3,18), c(34,33))
path = pathRes
varNames<-NULL
for( i in 1:length(pth$paths) ){
thisPath<-pth$paths[i]
theseVars<-strsplit(thisPath, "->")[[1]]
V1<-which(theseVars[1] == pth$varNames)
V2<-which(theseVars[2] == pth$varNames)
varNames = union(varNames, V1)
varNames = union(varNames, V2)
}
varNames
for( i in 1:length(pth$paths) ){
thisPath<-pth$paths[i]
theseVars<-strsplit(thisPath, "->")[[1]]
V1<-theseVars[1]
V2<-theseVars[2]
varNames = union(varNames, V1)
varNames = union(varNames, V2)
}
varNames
V1
V2
varNames<-NULL
for( i in 1:length(pth$paths) ){
thisPath<-pth$paths[i]
theseVars<-strsplit(thisPath, "->")[[1]]
V1<-theseVars[1]
V2<-theseVars[2]
varNames = union(varNames, V1)
varNames = union(varNames, V2)
}
varNames
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
source("MultiLevelPathAnalysis2.R")
pathRes
pathRes$coefMatrix
pth$bootDirect$p
pth$bootDirect$p[,,]
pth$bootDirect$p[,]
pth$bootDirect$p[,] = 0
pth$bootDirect$p
pth$coefMatrix
source("MultiLevelPathAnalysis2.R")
pathRes
pathRes$bootDirect
pathRes$bootDirect$CI95Pct
pathRes$bootDirect$CI95Pct[1,2]
source("MultiLevelPathAnalysis2.R")
pathRes$bootDirect$CI95Pct[1,2]
pathRes$bootDirect$CI95Pct
pathRes$IP
